"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=(()=>{function a(b,c){for(var i=0,d;i<c.length;i++){d=c[i];d.enumerable=d.enumerable||!1;d.configurable=!0;if("value"in d)d.writable=!0;Object.defineProperty(b,d.key,d)}}return(b,c,d)=>{if(c)a(b.prototype,c);if(d)a(b,d);return b}})();function _classCallCheck(a,b){if(!(a instanceof b)){throw new TypeError("Cannot call a class as a function")}}var CreateIndexValidator=function(){function a(){_classCallCheck(this,a)}_createClass(a,null,[{key:"isJSON",value:b=>{var c=!1;try{var d=JSON.stringify(b);JSON.parse(d);c=!0}catch(error){c=!1}return c}},{key:"isMalformed",value:b=>{var c=!1;try{b.forEach(d=>{var e=Object.keys(d).length;if(e>2||!d.title||!d.text){throw new Error("Malformed File")}})}catch(err){if(err.message.toLowerCase()==="malformed file"){c=!0}else{throw err}}return c}},{key:"checkFileName",value:function b(c){var d=void 0;if(!c||typeof c=="boolean"){d="Please specify a file name"}else if(typeof c!="string"){this.validity="The first argument(fileName) a string"}else if(typeof c=="string"){var e=c.toLowerCase().split(".").pop();if(e!=="json"){d="The file you're tryinig to check should be a json file"}}return d}},{key:"checkFileContent",value:function b(c){var d=void 0,e=void 0;if(!c){d="Empty JSON file. Please format your json file well"}else if(!Array.isArray(c)){d="Empty JSON file. Please format your json file well"}else if(this.isJSON(c)){e=JSON.stringify(c);if(!e.replace(/"/g,"")){d="Empty File: The JSON File must not be empty"}else if(this.isMalformed(c)){d="Malformed File: The JSON file you passed in is out of shape. Please check again"}}else if(!this.isJSON(c)){d="Invalid File: JSON file Does not contain valid JSON object"}return d}}]);return a}();exports.default=CreateIndexValidator;